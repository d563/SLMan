fabric
======
::

    pip install fabric nose mock

::

    mkdir /var/lib/git/fabric
    cd /var/lib/git/fabric
    git init .
    mkdir fabfile

.. module:: fabfile/__init__.py
.. code-block:: python

    # -*- coding: utf-8 -*-
    # fabfile/__init__.py
    from fabric.api import env
    import fabmodule
    env.hosts = ['localhost']
    # env.user = 'd563'
    # env.password = 'pass'

.. module:: fabfile/fabmodule.py
.. code-block:: python

    # -*- coding: utf-8 -*-
    # fabfile/fabmodule.py
    from fabric.api import env, local, lcd, put, run, sudo, cd
    from fabric.contrib.files import exists
    from fabric.decorators import task

    @task
    def tmpPut():
      print env.host_string
      if exists('/usr/tmp'):
        with cd('/usr/tmp'):
          put('fabfile/fabmodule.py', '.', use_sudo=True)
          check()
          sudo('rm -rf fabmodule.py')

    def check()
      s1 = str(run('cat fabmodule.py')).replace('\r', '')
      s2 = local('cat fabfile/fabmodule.py', capture=True)
      assert s1 == s2

::

    fab -l
    fab fabmodule.tmpPut

.. module:: fabfile/fabmodule-test.py
.. code-block:: python

    # -*- coding: utf-8 -*-
    # fabfile/fabmodule-test.py
    from mock import patch, call
    import fabmodule as f
    class TestFabmodule():
      @patch('fabric.api.local')
      @patch('fabric.api.run')
      def testCheck(self, run, local):
        run.return_value = 'd563\r\nSLMan'
        local.side_effect = ['d563\nSLMan']
        reload(f)
        f.check()
        assert run.mock_calls == [call('cat fabmodule.py')]
        assert local.mock_calls == [call('cat fabfile/fabmodule.py', capture=True)]

::

    nosetests -s
    nosetests -v
