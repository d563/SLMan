fabric
======
::

    pip install fabric nose mock

::

    mkdir /var/lib/git/fabric
    cd /var/lib/git/fabric
    git init .
    mkdir fabfile

.. code-block:: python

    # -*- coding: utf-8 -*-
    # __init__.py
    import fabmodule

    env.hosts = ['hostname']
    env.user = 'd563'
    env.password = 'pass'

.. module:: fabmodule.py

::

    # -*- coding: utf-8 -*-
    # fabmodule.py
    from fabric.api import env, local, lcd, put, run, sudo, cd
    from fabric.contrib.files import exists
    from fabric.decorators import task

    @task
    def ls_bin():
      print env.host_string
      if exists('/usr/bin'):
        with cd('/usr/bin'):
          sudo('ls -al')

::

    fab ls_bin

.. module:: fabmodule-test.py

::

    # -*- coding: utf-8 -*-
    # fabmodule-test.py
    from mock import patch, call
    import fabmodule as f

    class TestFabfile():
      @patch('fabric.api.sudo')
      @patch('fabric.contrib.files.exists')
      def test_ls_bin(self, exists, sudo):
        exists.return_value = True
        # exists.side_effect = [True]
        reload(f)
        f.ls_bin()
        assert exists.mock_calls == [call('/usr/bin')]
        assert sudo.mock_calls == [call('ls -al')]

::

    nosetests -v
