groovy
======
::

    cd /usr/local/lib
    wget http://dl.bintray.com/groovy/maven/groovy-binary-2.4.3.zip
    unzip groovy-binary-2.4.3.zip
    ln -nfs /usr/local/lib/groovy-2.4.3/bin/groovy /usr/local/bin/groovy

file
----
.. code-block:: groovy


    new URL('http://d563.github.io/SLMan/_static/template.html').text

    new File('/Windows/System32/drivers/etc/hosts').text

    new File('.').listFiles({it.isFile()} as FileFilter).collect{it.canonicalPath}

    new XmlSlurper().parseText('<a><b>1</b><b>2</b></a>').b.collect()

mongodb
-------
.. code-block:: groovy

    @Grab(group='com.gmongo', module='gmongo', version='1.3')
    import com.gmongo.GMongo
    import groovy.json.JsonBuilder
    println(new JsonBuilder(new GMongo('localhost', 27017).getDB('testdb').testcol.find()))

krb5
----
.. module:: Krb5.groovy
.. code-block:: groovy

    import javax.security.auth.callback.Callback
    import javax.security.auth.callback.CallbackHandler
    import javax.security.auth.callback.NameCallback
    import javax.security.auth.callback.PasswordCallback
    import javax.security.auth.login.AppConfigurationEntry
    import javax.security.auth.login.AppConfigurationEntry.LoginModuleControlFlag
    import javax.security.auth.login.Configuration
    import javax.security.auth.login.LoginContext
    // Krb5.groovy
    System.setProperty('java.security.krb5.realm', 'EXAMPLE.COM')
    System.setProperty('java.security.krb5.kdc', 'localhost.localdomain')
    class CBHandler implements CallbackHandler {
      String id, pw
      CBHandler(String id, String pw) {
        this.id = id
        this.pw = pw
      }
      void handle(Callback[] cbs) {
        cbs.each {
          if (it instanceof NameCallback) it.name = id
          if (it instanceof PasswordCallback) it.password = pw.toCharArray()
        }
      }
    }
    class Conf extends Configuration {
      @Override
      AppConfigurationEntry[] getAppConfigurationEntry(String name) {
        [
          new AppConfigurationEntry(
            'com.sun.security.auth.module.Krb5LoginModule',
            LoginModuleControlFlag.REQUIRED,
            [useTicketCache: 'false', debug: 'false']
          )
        ]
      }
    }
    try {
      new LoginContext(
        'SLMan',
        null,
        new CBHandler('d563', 'd563'),
        new Conf()
      ).login()
      'OK'
    }
    catch (Exception e) {
      e.printStackTrace()
      'NG'
    }

mail
----
.. module:: mail.groovy
.. code-block:: groovy

    @Grab(group='javax.mail', module='mail', version='1.4.7')
    import javax.mail.Authenticator
    import javax.mail.Message.RecipientType
    import javax.mail.PasswordAuthentication
    import javax.mail.Session
    import javax.mail.Transport
    import javax.mail.internet.InternetAddress
    import javax.mail.internet.MimeMessage
    // mail.groovy
    def u = 'mail.d563'
    def p = 'pass'
    Session s = Session.getInstance(
      new ConfigSlurper().parse('''
        mail {
          smtp {
            host = 'smtp.gmail.com'
            port = 465
            auth = true
            ssl.enable = true
          }
        }
      ''').toProperties(),
      new Authenticator() {
        PasswordAuthentication passwordAuthentication = new PasswordAuthentication(u, p)
      }
    )
    MimeMessage m = new MimeMessage(s)
    m.addRecipient(RecipientType.TO, new InternetAddress("${u}@gmail.com"))
    m.setFrom(new InternetAddress("${u}@gmail.com"))
    m.setSubject('タイトル', 'UTF-8')
    m.setText('本文', 'UTF-8')
    Transport.send(m)
