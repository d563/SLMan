python
======
file
----
.. code-block:: python

    #!/usr/bin/env python
    # -*- coding: utf-8 -*-
    with open('d563.txt') as f:
      print f.read()

    with open('d563.txt', 'w') as f:
      f.write('d563')

date
----
.. code-block:: python

    from datetime import date, datetime, timedelta
    SQL = '''
    SELECT *
    FROM hoge
    WHERE hoge_date = TO_DATE('%(dateStr)s', 'YYYY-MM-DD')
    '''
    # toDate = datetime.strptime('2015-01-02 03:04:05', '%Y-%m-%d %H:%M:%S')
    dateStr = (date.today() - timedelta(1)).strftime('%Y-%m-%d')
    sql = SQL % {'dateStr': dateStr}

mongodb
-------
::

    pip install pymongo

.. code-block:: python

    from pymongo import Connection
    import json
    con = Connection('localhost', 27017)
    lst = list(con.testdb.testcol.find())
    for dat in lst:
      del dat['_id']

    print json.dumps(lst)

oracle
------
::

    pip install cx_Oracle

.. code-block:: python

    import cx_Oracle
    def getData():
      con = cx_Oracle.connect(
        'd563',
        'd563',
        '(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=localhost)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=XE)))'
      )
      cur = con.cursor()
      cur.execute('select * from tbl1 where score > :score', {'score': 1})
      lst = cur.fetchall()
      cur.close()
      con.close()
      for low in lst:
        yield Data(low)

    class Data:
      def __init__(self, low):
        self.name = low[0]

    if __name__ == '__main__':
      for d in getData():
        print d.name

mysql
-----
::

    yum -y install mysql-devel

    pip install MySQL-python

.. code-block:: python

    import MySQLdb
    import json
    con = MySQLdb.connect(
      host='localhost',
      db='d563',
      user='SLMan',
      passwd='SLManPass')
    cur = con.cursor(MySQLdb.cursors.DictCursor)
    cur.execute('select * from tbl1')
    lst = list(cur.fetchall())
    cur.close()
    con.close()

    for dat in lst:
      dat['created'] = str(dat.get('created', ''))

    json.dumps(lst)

decorator
---------
.. code-block:: python

    def deco(func):
      def _deco(*args):
        return [i for i in func(*args) if i]
      return _deco

    @deco
    def gene(self, inp):
      for i in inp: yield i

    if __name__ == '__main__':
      print gene([-1, 0, 1])

mail
----
.. code-block:: python

    import smtplib
    from email.MIMEText import MIMEText
    u = 'user'
    p = 'pass'
    f = '%s@yahoo.co.jp' % u
    t = [f]
    m = MIMEText('本文', 'plain', 'UTF-8')
    m['Subject'] = 'タイトル'
    m['From'] = f
    m['To'] = ','.join(t)
    s = smtplib.SMTP_SSL('smtp.mail.yahoo.co.jp', 465)
    s.login(u, p)
    s.sendmail(f, t, m.as_string())
    s.quit()
