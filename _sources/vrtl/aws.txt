aws
===
.. index:: /etc/profile.d/aws.sh

::

    pip install boto

    echo 'export AWS_ACCESS_KEY_ID=XXX
    export AWS_SECRET_ACCESS_KEY=YYY' > /etc/profile.d/aws.sh 

    # mkdir ~/.ssh
    vi ~/.ssh/d563.pem
    chmod 600 ~/.ssh/d563.pem

.. code-block:: python

    cat << '[EOF]' > fabfile.py
    # -*- coding: utf-8 -*-
    from fabric.api import env, local, lcd, put, run, sudo, cd
    from fabric.contrib.files import exists
    from fabric.decorators import task
    from boto import ec2
    import time

    env.user = 'centos'

    @task
    def create():
      conn = ec2.connect_to_region('us-west-2')
      resv = conn.run_instances(
        'ami-c7d092f7',
        instance_type='t2.micro',
        key_name='d563',
        security_groups=['CentOS7']
      )
      while len(env.hosts) == 0:
        time.sleep(5)
        for i in [i for r in conn.get_all_reservations() for i in r.instances]:
          if i._state.code == 16 and i.id == resv.instances[0].id:
            env.hosts = [i.ip_address]
      print env.hosts
      time.sleep(60)

    @task
    def init():
      sudo('unalias cp mv rm')
      sudo('echo LANG=ja_JP.UTF-8 > /etc/locale.conf')
      sudo('cp -pf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime')
      sudo('setenforce 0')
      sudo("sed -i.org -e 's/debuglevel=2/debuglevel=0/' /etc/yum.conf")
      sudo('yum -y install wget unzip gcc gcc-c++ java-1.7.0-openjdk-devel python-devel')
      sudo('yum -y update')
      sudo('easy_install pip')
      sudo('pip install -U pip')
      sudo('pip install -U setuptools')
      sudo("sed -i.org -e '/#Port 22/aPort 443' /etc/ssh/sshd_config")
      sudo('service sshd restart')

    @task
    def delete():
      conn = ec2.connect_to_region('us-west-2')
      conn.terminate_instances(instance_ids=[i.id for r in conn.get_all_reservations() for i in r.instances])
        [EOF]

::

    fab -i ~/.ssh/d563-tokyo.pem create init

    ssh -i ~/.ssh/d563-tokyo.pem centos@XX.XX.XX.XX
